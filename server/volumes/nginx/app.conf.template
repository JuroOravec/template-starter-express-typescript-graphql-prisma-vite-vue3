# See more on how to configure reverse proxy
# - https://blog.logrocket.com/how-to-run-a-node-js-server-with-nginx/
# - https://github.com/docker/awesome-compose/tree/e6b1d2755f2f72a363fc346e52dce10cace846c8/nginx-nodejs-redis/nginx

server {
    listen 80;
    server_name example.com; # TODO - replace example.com with your domain
    server_tokens off;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name example.com; # TODO - replace example.com with your domain
    server_tokens off;

    # TODO - replace example.com with your domain
    ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem;

    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    location / {
        # Redirect to server app
        # NOTE: This is the URL/IP of the server as seen from within docker-compose,
        # hence the domain is 'node_server' instead of '127.0.0.1'
        # See https://serverfault.com/a/1042258/1021637
        proxy_pass  http://node_server:3000;
        proxy_set_header    Host                $http_host;
        proxy_set_header    X-Real-IP           $remote_addr;
        proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    ###########################
    ## PROXIES
    ###########################

    ## Proxies for telemetry services to avoid AdBlockers
    ## See https://stackoverflow.com/questions/5238377/nginx-location-priority
    ##
    ## These are dynamically populated from env vars
    ## See https://serverfault.com/a/1042258/1021637

    ## Forward to error monitoring ingest
    location = /_t/e {
        proxy_pass  ${ERROR_TRACK_URL};
    }

    # Forward to analytics ingest
    location = /_t/a {
        proxy_pass  ${ANALYTICS_URL};
    }
}
