version: '3'

services:
  # nginx:
  #   image: nginx:1.24-alpine
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./volumes/nginx:/etc/nginx/conf.d
  #     - ./volumes/certbot/conf:/etc/letsencrypt
  #     - ./volumes/certbot/www:/var/www/certbot
  #   # Reload newly obtained/renewed certificates
  #   command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  # certbot:
  #   image: certbot/certbot
  #   volumes:
  #     - ./volumes/certbot/conf:/etc/letsencrypt
  #     - ./volumes/certbot/www:/var/www/certbot
  #   # Check if certificate is up for renewal every 12 hours as recommended by Letâ€™s Encrypt
  #   entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  postgres:
    image: postgres:15.3-alpine
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: ${SERVER_DB_USER}
      POSTGRES_PASSWORD: ${SERVER_DB_PASSWORD}
      POSTGRES_DB: ${SERVER_DB_NAME}

  redis:
    image: redis:7.0-alpine
    restart: always
    ports:
      - 6379:6379

  # node_server:
  #   build: .
  #   expose:
  #     - '3000'
  #   ports:
  #     - 3000:3000
  #   restart: always
  #   command: npm run start
  #   environment:
  #     VIRTUAL_HOST: localhost
  #     SERVER_DB_URL: ${SERVER_DB_URL}
  #     NODE_ENV: ${NODE_ENV}
  #     APP_ENV: ${APP_ENV}
  #   depends_on:
  #     - postgres
  #     - redis

  # See https://docker-mailserver.github.io/docker-mailserver/latest/examples/tutorials/basic-installation/#using-dms-as-a-local-mail-relay-for-containers
  # mailserver:
  #   image: ghcr.io/docker-mailserver/docker-mailserver:latest
  #   container_name: mailserver
  #   # Provide the FQDN of your mail server here (Your DNS MX record should point to this value)
  #   hostname: mail.example.com # TODO
  #   ports:
  #     - "25:25"
  #     - "587:587"
  #     - "465:465"
  #   volumes:
  #     - ./docker-data/dms/mail-data/:/var/mail/
  #     - ./docker-data/dms/mail-state/:/var/mail-state/
  #     - ./docker-data/dms/mail-logs/:/var/log/mail/
  #     - ./docker-data/dms/config/:/tmp/docker-mailserver/
  #     - /etc/localtime:/etc/localtime:ro
  #   environment:
  #     - ENABLE_FAIL2BAN=1
  #     # Using letsencrypt for SSL/TLS certificates:
  #     - SSL_TYPE=letsencrypt
  #     # Allow sending emails from other docker containers:
  #     # Beware creating an Open Relay: https://docker-mailserver.github.io/docker-mailserver/latest/config/environment/#permit_docker
  #     - PERMIT_DOCKER=network
  #     # You may want to enable this: https://docker-mailserver.github.io/docker-mailserver/latest/config/environment/#spoof_protection
  #     # See step 6 below, which demonstrates setup with enabled/disabled SPOOF_PROTECTION:
  #     - SPOOF_PROTECTION=1
  #   cap_add:
  #     - NET_ADMIN # For Fail2Ban to work
  #   restart: always